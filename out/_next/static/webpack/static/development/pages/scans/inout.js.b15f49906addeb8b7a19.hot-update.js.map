{"version":3,"file":"static/webpack/static/development/pages/scans/inout.js.b15f49906addeb8b7a19.hot-update.js","sources":["webpack:///./demos/scan/inout/location.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\n// import QrScan from \"react-qr-reader\";\n// Blob is not defined” in NextJs? dynamic\nimport dynamic from \"next/dynamic\";\nconst QrScan = dynamic(() => import(\"react-qr-reader\"), { ssr: false });\n\nimport { geolocated } from \"react-geolocated\";\n\nimport arePoints from \"./arePoints\";\n\nconst location = (props) => {\n  const [state, setState] = useState([]);\n  const [qrscan, setQrscan] = useState(undefined);\n  \n  const handleScan = (data) => {\n    if (data) {\n      setQrscan(data);\n    }\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  const handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false\n    });\n  };\n\n  const handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false\n    });\n  };\n\n  return (\n    <div>\n      {props.isGeolocationAvailable}\n      {!props.isGeolocationAvailable ? (\n        <div>Your browser does not support Geolocation</div>\n      ) : !props.isGeolocationEnabled ? (\n        <div>Geolocation is not enabled </div>\n      ) : props.coords ? (\n        <>\n          <Row>\n            <Col span={12}>\n              <Button type=\"dashed\" block>\n                Latitude : {props.coords.latitude.toFixed(4)}\n              </Button>\n            </Col>\n            <Col span={12}>\n              <Button type=\"dashed\" block>\n                Longitude : {props.coords.longitude.toFixed(4)}\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24} style={{ textAlign: \"center\" }}>\n              <Button type=\"dashed\" block style={{ height: \"100%\" }}>\n                <QrScan\n                  delay={300}\n                  onError={handleError}\n                  onScan={handleScan}\n                  style={{ margin: \"15px 0px 15px 0px\" }}\n                />\n              </Button>\n            </Col>\n          </Row>\n\n          <Row gutter={24} style={{ textAlign: \"center\" }}>\n            <h1>\n              {arePoints(\n                {\n                  lat: props.coords.latitude.toFixed(4),\n                  lng: props.coords.longitude.toFixed(4)\n                },\n                {\n                  lat: qrscan !== undefined ? qrscan.latitude : 0,\n                  lng: qrscan !== undefined ? qrscan.longitude : 0\n                },\n                0.5\n              ) ? (\n                <Modal\n                  title=\"Basic Modal\"\n                  visible={this.state.visible}\n                  onOk={this.handleOk}\n                  onCancel={this.handleCancel}\n                >\n                  <p>Some contents...</p>\n                  <p>Some contents...</p>\n                  <p>Some contents...</p>\n                </Modal>\n              ) : (\n                \"--- กรุณาตรวจสอบจุดสแกน --- \"\n              )}\n            </h1>\n          </Row>\n\n          <Row>\n            <Col span={24} style={{ textAlign: \"center\" }}>\n              <br />\n              Latitude Mobile :{\" \"}\n              {qrscan !== undefined ? qrscan.latitude : \"is not scan\"}\n              <br />\n              Longitude Mobile :{\" \"}\n              {qrscan !== undefined ? qrscan.longitude : \"is not scan\"}\n              <br />\n              Location Mobile :{\" \"}\n              {qrscan !== undefined ? qrscan.location : \"is not scan\"}\n            </Col>\n          </Row>\n        </>\n      ) : (\n        <div>กำลังค้นหาตำแหน่ง &hellip; </div>\n      )}\n    </div>\n  );\n};\n\nexport default geolocated({\n  // positionOptions: {\n  //   enableHighAccuracy: false\n  // },\n  positionOptions: {\n    enableHighAccuracy: true,\n    maximumAge: 0,\n    timeout: Infinity\n  },\n\n  watchPosition: false,\n  userDecisionTimeout: 5000,\n  suppressLocationOnMount: false,\n  // geolocationProvider: navigator.geolocation,\n  isOptimisticGeolocationEnabled: true\n})(location);\n\n// export default location;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAKA;AACA;AAFA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAdA;;;;A","sourceRoot":""}